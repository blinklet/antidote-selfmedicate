---
apiVersion: v1
kind: Namespace
metadata:
  name: test

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: webssh2
  namespace: test
spec:
  replicas: 1
  revisionHistoryLimit: 3
  template: 
    metadata:
      name: webssh2
      labels:
        app: webssh2
    spec:
      containers:
      - name: webssh2
        image: antidotelabs/webssh2:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 8443

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: utility
  namespace: test
spec:
  replicas: 1
  revisionHistoryLimit: 3
  template: 
    metadata:
      name: utility
      labels:
        app: utility
    spec:
      containers:
      - name: utility
        image: antidotelabs/utility
        ports:
        - containerPort: 22

---
kind: Service
apiVersion: v1
metadata:
  name: webssh2
  namespace: test
spec:
  selector:
    app: webssh2
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
kind: Service
apiVersion: v1
metadata:
  name: utility
  namespace: test
spec:
  selector:
    app: utility
  ports:
    - name: ssh
      port: 22
  type: ClusterIP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/
    ingress.kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/ssl-services: "webssh2"
    ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/force-ssl-redirect: "true"
    # ingress.kubernetes.io/rewrite-target: "/"
    # nginx.ingress.kubernetes.io/rewrite-target: "/"
    # nginx.ingress.kubernetes.io/app-root: "/"
    # nginx.ingress.kubernetes.io/limit-connections: "10"
    # nginx.ingress.kubernetes.io/limit-rps: "5"
  name: webssh2
spec:
  rules:
  - http:
      paths:
      - path: "/"
        backend:
          serviceName: webssh2
          servicePort: 8080
